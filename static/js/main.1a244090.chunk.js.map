{"version":3,"sources":["assets/images/crying-laughing-emoji.svg","components/Joke.js","components/Loader.js","components/JokeList.js","components/SideBar.js","components/JokeUI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Joke","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","voteUp","bind","assertThisInitialized","voteDown","getColor","getEmoji","click","id","votes","react_default","a","createElement","className","onClick","role","style","borderColor","text","concat","Component","Loader","JokeList","_ref","data","voteHandler","loading","hide","displayJokes","sort","b","map","joke","src_components_Joke","jokeText","key","src_components_Loader","SideBar","_this$props","disabled","src","cryLaughEmoji","alt","JokeUI","state","jokes","window","localStorage","getItem","JSON","parse","seenJokes","Set","getJoke","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","headers","Accept","sent","abrupt","stop","getJokes","_callee2","newJokes","_context2","setState","length","numJokesToGet","has","push","toConsumableArray","afterLoading","t0","console","log","setTimeout","updateLocalStorage","setItem","stringify","plusMinus","src_components_SideBar","src_components_JokeList","href","defaultProps","App","src_components_JokeUI","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a244090.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crying-laughing-emoji.6fd227e4.svg\";","import React, { Component } from 'react';\r\nimport './Joke.css'\r\n  \r\nclass Joke extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.voteUp = this.voteUp.bind(this);\r\n    this.voteDown = this.voteDown.bind(this);\r\n    this.getColor =this.getColor.bind(this);\r\n    this.getEmoji =this.getEmoji.bind(this);\r\n  }\r\n\r\n  voteUp() {\r\n    this.props.click(this.props.id, 1);\r\n  }\r\n\r\n  voteDown() {\r\n    this.props.click(this.props.id, -1);\r\n  }\r\n\r\n  getColor() {\r\n    const votes = this.props.votes;\r\n    switch (true) {\r\n      case votes >= 15 :\r\n        return \"#4CAF50\";\r\n      case votes >= 12 :\r\n        return \"#8BC34A\";\r\n      case votes >= 9 :\r\n        return \"#CDDC39\";\r\n      case votes >= 6 :\r\n        return \"#FFEB3B\";\r\n      case votes >= 3 :\r\n        return \"#FFC107\";\r\n      case votes >= 0 :\r\n        return \"#FF9800\";\r\n      default:\r\n        return \"#f44336\";\r\n    }\r\n  }\r\n\r\n  getEmoji() {\r\n    const votes = this.props.votes;\r\n    switch (true) {\r\n      case votes >= 15 :\r\n        return \"em em-rolling_on_the_floor_laughing\";\r\n      case votes >= 12 :\r\n        return \"em em-laughing\";\r\n      case votes >= 9 :\r\n        return \"em em-smiley\";\r\n      case votes >= 6 :\r\n        return \"em em-slightly_smiling_face\";\r\n      case votes >= 3 :\r\n        return \"em em-neutral_face\";\r\n      case votes >= 0 :\r\n        return \"em em-confused\";\r\n      default:\r\n        return \"em em-angry\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Joke\">\r\n        <div className=\"Joke-vote-container\">\r\n          <i onClick={this.voteUp} className=\"far fa-thumbs-up\" role=\"button\"></i>\r\n          <span className=\"Joke-votes\" style={{borderColor: this.getColor()}}>{this.props.votes}</span>\r\n          <i onClick={this.voteDown} className=\"far fa-thumbs-down\" role=\"button\"></i>\r\n        </div>\r\n        <div className=\"Joke-text\">{this.props.text}</div>\r\n        <i className={`${this.getEmoji()} joke-emoji-animate`}></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Joke;","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <i className=\"far fa-8x fa-laugh-beam fa-spin\"></i>\r\n      <h2>Loading...</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './JokeList.css';\r\nimport Joke from './Joke';\r\nimport Loader from './Loader';\r\n\r\nconst JokeList = ({data, voteHandler, hide, loading}) => {\r\n  let jokes = data.sort((a,b) => b.votes - a.votes);\r\n  const displayJokes = jokes.map(joke => (\r\n    <Joke\r\n      text={joke.jokeText}\r\n      id={joke.id}\r\n      key={joke.id}\r\n      votes={joke.votes}\r\n      click={voteHandler}\r\n    />\r\n  ));\r\n\r\n  return (!loading \r\n    ? (\r\n        <div className=\"JokeList\">\r\n          {displayJokes}\r\n        </div>\r\n      )\r\n    : <Loader />\r\n  )\r\n}\r\n\r\nexport default JokeList;","import React, { Component } from 'react';\r\nimport './SideBar.css';\r\nimport cryLaughEmoji from '../assets/images/crying-laughing-emoji.svg';\r\n  \r\nclass SideBar extends Component {\r\n  render() {\r\n    const { onClick, disabled } = this.props;\r\n\r\n    return (\r\n      <div className=\"SideBar\">\r\n        <h1><span>Dad</span> Jokes</h1>\r\n        <img src={cryLaughEmoji} alt=\"crying laughing emoji\"/>\r\n        <button onClick={onClick} className=\"SidebarButton\" disabled={disabled}>Get Jokes</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport './JokeUI.css';\r\nimport axios from 'axios';\r\nimport JokeList from './JokeList';\r\nimport SideBar from './SideBar';\r\n\r\nclass JokeUI extends Component {\r\n  static defaultProps = {\r\n    numJokesToGet: 10\r\n  };\r\n\r\n  state = {\r\n    jokes: window.localStorage.getItem('jokes') ? JSON.parse(window.localStorage.getItem('jokes')) : [],\r\n    loading: false\r\n  };\r\n  seenJokes = new Set(this.state.jokes.map(joke => joke.id));\r\n\r\n  componentDidMount() {\r\n    if (this.state.jokes.length === 0) this.getJokes();\r\n  };\r\n\r\n  getJoke = async () => {\r\n    const res = await axios.get(\r\n      'https://icanhazdadjoke.com/',\r\n      { headers: { Accept: \"application/json\" } }\r\n    );\r\n    return { jokeText: res.data.joke, id: res.data.id, votes: 0 };\r\n  }\r\n\r\n  getJokes = async () => {\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      const newJokes = [];\r\n\r\n      while (newJokes.length < this.props.numJokesToGet) {\r\n        const joke = await this.getJoke();\r\n        if (!this.seenJokes.has(joke.id)) newJokes.push(joke);\r\n      }\r\n\r\n      this.setState({jokes: [...this.state.jokes, ...newJokes]}, this.afterLoading);\r\n    } catch(e) {\r\n      console.log(e);\r\n      this.setState({loading: false})\r\n    }\r\n  }\r\n\r\n  afterLoading = () => {\r\n    setTimeout(() => {\r\n      this.setState({loading: false})\r\n    }, 1500);\r\n\r\n    this.updateLocalStorage();\r\n  }\r\n\r\n  updateLocalStorage = () => {\r\n    window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes));\r\n  }\r\n\r\n  voteHandler = (id, plusMinus) => {\r\n    this.setState({\r\n      jokes: this.state.jokes.map(joke => {\r\n        if (joke.id === id) joke.votes += plusMinus;\r\n        return joke;\r\n      }\r\n      )\r\n    },\r\n      this.updateLocalStorage\r\n    )\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"JokeUI\">\r\n        <SideBar onClick={this.getJokes} disabled={this.state.loading}/>\r\n        <JokeList\r\n          data={this.state.jokes}\r\n          loading={this.state.loading}\r\n          voteHandler={this.voteHandler}\r\n        />\r\n        <footer className=\"footer\">\r\n          <a href='https://dryicons.com/free-icons/emoji-icons'> Icon by Dryicons </a>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default JokeUI;","import React from 'react';\nimport './App.css';\nimport JokeUI from './components/JokeUI';\n\nfunction App() {\n  return (\n    <JokeUI />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}